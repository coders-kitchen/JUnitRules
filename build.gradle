apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'signing'

repositories {
	mavenCentral()
	maven {
		url 'http://download.eclipse.org/rt/eclipselink/maven.repo/'
	}
}

dependencies {
	compile 'junit:junit:4.11',
			'org.eclipse.persistence:javax.persistence:2.0.3',
			'javax:javaee-api:6.0'
        testCompile 'org.mockito:mockito-all:1.9.0'
	testRuntime 'org.eclipse.persistence:eclipselink:2.3.0',
			'org.eclipse.persistence:org.eclipse.persistence.jpa.modelgen.processor:2.3.0',
			'org.apache.derby:derby:10.9.1.0'
}

task sourcesJar(type : Jar ){
	from sourceSets.main.allSource
	classifier = 'sources'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
	classifier = 'javadoc'
	from 'build/docs/javadoc'
}

artifacts {
	archives jar
	archives javadocJar
	archives sourcesJar
}

if(hasProperty('sonatypeUsername')) {
	signing {
		sign configurations.archives
	}

	uploadArchives {
		repositories {
			mavenDeployer {
				beforeDeployment { MavenDeployment deployment -> signPom(deployment) }

				repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
					authentication(userName: sonatypeUsername, password: sonatypePassword)
				}
				pom.project {
					name 'JUnit Rules'
					packaging 'jar'
					description 'This archive represents a set of JUnit Rules that aren\'t available in the basic setup.'
					url 'http://coders-kitchen.github.com'

					scm {
						url 'scm:git@github:CodersKitchen/JUnitRules.git'
						connection 'scm:git@github:CodersKitchen/JUnitRules.git'
						developerConnection 'scm:git@github:CodersKitchen/JUnitRules.git'
					}



					developers {
						developer {
							id 'peterdaum'
							name 'Peter Daum'
						}
					}
				}
			}
		}
	}
}

